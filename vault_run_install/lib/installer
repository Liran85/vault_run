#!/usr/bin/env bash


# Save vault to file
function createVault() {
local Vault_path=${1-}
if [ -z $Vault_path ]; then
    Vault_path=$PWD
    echo "vault was created on $PWD"
fi
owner=$(whoami)
filename="${Vault_path}/$owner.vlt"
# echo "[Settings]" >>filename
# echo "timestamp=$(date +"%T")" >>filename
# echo "owner=$owner" >>filename
# create array of strings 
declare -a keys=("[Settings]" "timestamp=" "owner=")
# iterating over array(folders)
for key in "${keys[@]}"
do
   echo $key >>$filename
done
sed -i "/^timestamp=/s/=.*/=$(date +"%T")/" $filename
sed -i "/^owner=/s/=.*/=$owner/" $filename
}


function genKey() {
  # True if FILE exist
  local key=${1-}
  if [ -f $keyFile ]; then
    echo "Keyfile:: $VAULT_KEYS already exists"
    exit 1
  else
    #echo "Generate keyfile: $VAULT_KEYS"
    arr["key"]=openssl rand -hex 8
    echo arr["key"] >$keyFile
  fi
}

function encrypt() {
  #gpg -c $keyFile
  openssl aes-256-cbc -a -salt -in $keyFile -out $keyFile.enc
  retVal=$?
  if [ $retVal -eq 0 ]; then
    rm $keyFile
    echo "encrypted file sucessfully"
  fi

}

function decrypt() {
  local file=$1
  openssl aes-256-cbc -d -a -in .$file -out $file >2&>1
  rm $file

}
